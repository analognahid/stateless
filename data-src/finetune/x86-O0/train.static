endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rcx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rcx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar jmp hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov word ptr [ rax ] , hexvar mov byte ptr [ rax + num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , num mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , hexvar mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe shl rax , num mov rsi , rax lea rcx , [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rsi + rcx ] , rax mov qword ptr [ rsi + rcx + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax neg edx cmovns eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx mov edx , eax neg edx cmovns eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov ecx , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , cl mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax neg edx cmovns eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax neg edx cmovns eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , edx mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rcx mov edi , eax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , num mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] add eax , hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov edi , eax call hexvar call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] sub eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov ecx , eax shl edx , cl mov eax , edx not eax mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - hexvar ] mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] or eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num and dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov ecx , eax shl edx , cl mov eax , edx not eax mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx xor eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov ecx , eax shl edx , cl mov eax , edx not eax and eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , num sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx or eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl cmp dword ptr [ rbp - num ] , hexvar je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar jmp hexvar nop jmp hexvar nop mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] sub eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movq rax , xmm0 mov rdx , qword ptr [ rbp - num ] movq xmm0 , rax mov rsi , rdx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax neg edx cmovns eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rdx + rax ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rdx + rax ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax neg edx cmovns eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx nop mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al sub dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rip + hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] sub rax , rdx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - hexvar ] , eax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 mov eax , edi mov byte ptr [ rbp - num ] , al pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsx eax , byte ptr [ rbp - num ] sub eax , hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] cmp al , byte ptr [ rbp - num ] jne hexvar cmp byte ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - num ] cmp al , byte ptr [ rbp - num ] je hexvar movsx eax , byte ptr [ rbp - num ] movsx edx , byte ptr [ rbp - num ] sub eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] sub edx , num mov rcx , rax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rdx + rax ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar sub qword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx cmp eax , hexvar jg hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx jmp hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rax add rax , rdx movzx eax , word ptr [ rax ] test ax , ax js hexvar mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si eax , xmm0 pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movd xmm0 , eax call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , eax movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num add dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , hexvar je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , hexvar je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , eax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movq rdx , xmm1 mov eax , dword ptr [ rbp - num ] movq xmm0 , rdx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov edi , hexvar call hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rcx ] cmp dl , al jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rip + hexvar ] mov byte ptr [ rax + rcx ] , dl mov eax , dword ptr [ rbp - num ] add eax , num mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] not eax mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jge hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp + hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 addsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] add eax , eax mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , dword ptr [ rbp - num ] sub eax , ecx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx lea rax , [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub edx , num mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub edx , hexvar mov dword ptr [ rax ] , edx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov edi , hexvar call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar jmp hexvar nop jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edx , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx lea edx , [ rax * num ] add eax , edx sub ecx , eax mov edx , ecx sub edx , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx lea edx , [ rax * num ] add eax , edx sub ecx , eax mov edx , ecx test edx , edx jne hexvar mov edx , hexvar jmp hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx lea edx , [ rax * num ] add eax , edx sub ecx , eax mov edx , ecx jmp hexvar mov edx , num mov eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rdx mov rsi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov eax , dword ptr [ rbp - num ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea esi , [ rdx + rax ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov eax , dword ptr [ rbp - num ] test eax , eax jns hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] neg eax mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] test eax , eax jns hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] neg eax mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov dword ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] test eax , eax js hexvar mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] imul edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + num ] movsxd rcx , edx cqo idiv rcx mov rax , rdx mov dword ptr [ rbp - num ] , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + hexvar ] movsxd rcx , edx cqo idiv rcx mov rax , rdx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar lea rax , [ rip + hexvar ] mov rcx , rax mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov dword ptr [ rax ] , hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov rdx , rcx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , num jg hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , eax call rdx test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , eax call rdx test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num ja hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar call hexvar jmp hexvar call hexvar jmp hexvar call hexvar nop cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rsi , eax mov rax , rsi shl rax , num add rax , rsi shl rax , num mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rsi mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call rcx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov eax , hexvar jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe mov dword ptr [ rbp + rax * num + hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] comisd xmm0 , xmm1 ja hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rax * num ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add qword ptr [ rbp - hexvar ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx ecx , al mov eax , edx sub eax , ecx jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rsi mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rsi mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov eax , num sub rax , rdx add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] neg rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov esi , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov esi , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax lea rdx , [ rip + hexvar ] add rax , rdx jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] add rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rsi , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rsi , eax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rcx ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rsi ] mov rdx , qword ptr [ rsi + num ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 ja hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rax ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rcx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx + rcx * num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx mov edx , dword ptr [ rdx ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx sub eax , num add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rax mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , rdx add rax , rax add rax , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov edi , num call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov edi , num call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx shl rax , num add rax , rcx lea rcx , [ rax * num ] add rax , rcx shl rax , num lea rcx , [ rip + hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - num ] add edx , num mov rsi , rax mov edi , edx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx + hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - num ] add rax , rdx lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jg hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rsi , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rsi , eax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rcx ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rsi ] mov rdx , qword ptr [ rsi + num ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 ja hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rcx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx + rcx * num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx mov edx , dword ptr [ rdx ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , rax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar nop jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al setne al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar cmp eax , - num jne hexvar mov eax , hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] mulsd xmm0 , xmm0 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] movq rax , xmm1 movq xmm0 , rax mov eax , num call hexvar pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movq xmm0 , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rcx , rax mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov esi , edx mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] cmp edx , eax cmovge eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi sub dword ptr [ rbp - num ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi add dword ptr [ rbp - num ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - num ] lea rax , [ rdx + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num add rax , rsi mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num add rax , rsi mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdi , [ rcx + rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov dword ptr [ rax + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rcx + rax ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov ecx , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , hexvar mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num add rax , rsi mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdi , [ rcx + rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov dword ptr [ rax + hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rcx + rax ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp edx , eax setge al movzx eax , al pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax setle al movzx eax , al pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cdqe shl rax , num sub rax , num add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cdqe shl rax , num add rax , rcx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , ecx cdqe shl rax , num lea rdx , [ rsi + rax ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx eax , byte ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - num ] add eax , num mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movzx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jbe hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jge hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jbe hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jbe hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jns hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax je hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rdx add rax , rax add rax , rcx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax je hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] sub eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx add edx , edx add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al call hexvar mov rdx , qword ptr [ rax ] movzx eax , byte ptr [ rbp - num ] add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - num ] mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx and eax , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] sub eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx add edx , edx add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jg hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jle hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax add ecx , ecx add ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rip + hexvar ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov edx , dword ptr [ rdx ] add edx , hexvar cmp eax , edx jne hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp rax , num je hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , rax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rdx + rax ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx add eax , eax add eax , edx shl eax , num sub ecx , eax mov edx , ecx mov dword ptr [ rsi ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , rax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov ecx , dword ptr [ rip + hexvar ] cdq idiv ecx mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cdqe shl rax , num add rax , rdx mov rax , qword ptr [ rax ] jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cdqe shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , rax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov qword ptr [ rbp - num ] , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx sub eax , num add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar add dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edi , num call hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , hexvar call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edi , eax call hexvar imul eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num ja hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar call hexvar jmp hexvar call hexvar jmp hexvar call hexvar nop cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] mulsd xmm0 , xmm0 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] imul eax , eax pop rbp ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , edi movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - num ] mulsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov dword ptr [ rbp - num ] , edx test eax , eax jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov esi , dword ptr [ rdx + rax * num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov ecx , dword ptr [ rdx + rax * num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax add ecx , esi mov eax , dword ptr [ rbp - num ] cdqe mov dword ptr [ rdx + rax * num ] , ecx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] imul eax , eax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi jmp hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov dword ptr [ rbp - num ] , edx test eax , eax jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] cmp edx , eax cmovge eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rax * num ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov ecx , dword ptr [ rip + hexvar ] lea eax , [ rcx + num ] mov dword ptr [ rip + hexvar ] , eax mov edx , dword ptr [ rip + hexvar ] lea eax , [ rdx + num ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] lea esi , [ rax + num ] mov dword ptr [ rbp - num ] , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , edi movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ rbp - num ] mulsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar add dword ptr [ rbp - num ] , num jmp hexvar nop mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rbp - num ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - num ] divsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx cmp edx , num je hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , num ja hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar jmp hexvar nop mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] comiss xmm0 , dword ptr [ rip + hexvar ] ja hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rcx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rcx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jg hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] cmp ecx , eax jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx shl rax , num add rax , rcx shl rax , num lea rcx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jg hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , esi mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] comiss xmm0 , dword ptr [ rip + hexvar ] ja hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] comiss xmm0 , dword ptr [ rip + hexvar ] ja hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar add dword ptr [ rbp - num ] , num shr dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 fld xword ptr [ rip + hexvar ] fstp xword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar push qword ptr [ rbp - num ] push qword ptr [ rbp - hexvar ] lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , dword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] ucomiss xmm0 , dword ptr [ rbp - num ] jp hexvar movss xmm0 , dword ptr [ rip + hexvar ] ucomiss xmm0 , dword ptr [ rbp - num ] jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar add dword ptr [ rbp - num ] , num shr dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , dword ptr [ rbp - num ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , hexvar mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jbe hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , eax jae hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar add dword ptr [ rbp - num ] , num shr dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe movzx eax , byte ptr [ rcx + rax ] movsx eax , al mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx rax , al shl rax , num lea rdx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] add edx , num mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , eax call rdx test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , eax call rdx test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num ja hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar call hexvar jmp hexvar call hexvar jmp hexvar call hexvar nop cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] comisd xmm0 , xmm1 jbe hexvar mov eax , hexvar jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe mov dword ptr [ rbp + rax * num + hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax ] comisd xmm0 , xmm1 ja hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rax * num ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add qword ptr [ rbp - hexvar ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rsi mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rsi mov rsi , rcx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov eax , num sub rax , rdx add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] neg rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov esi , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax lea rdx , [ rip + hexvar ] add rax , rdx jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add eax , eax mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov edi , num call hexvar mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - num ] mulsd xmm0 , xmm0 addsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] comisd xmm0 , xmm1 jb hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar test rax , rax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jns hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar jmp hexvar sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax js hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov dword ptr [ rip + hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call rdx jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov eax , dword ptr [ rax ] mov esi , num mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , num mov edi , eax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , hexvar lea rcx , [ rip + hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar nop mov eax , dword ptr [ rip + hexvar ] mov edx , hexvar lea rcx , [ rip + hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx movsxd rax , edx add rax , rsi movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al nop mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , hexvar movzx eax , byte ptr [ rax ] movsx eax , al and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi nop mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , hexvar movzx eax , byte ptr [ rax ] movsx eax , al and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movsx eax , al pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , hexvar shl eax , hexvar cdqe mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov qword ptr [ rip + hexvar ] , hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov ecx , num mov edx , num mov esi , num mov edi , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] mov edx , eax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] mov edx , eax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov ecx , num mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov ecx , num mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov ecx , num mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov ecx , num mov edx , num mov esi , num mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov ecx , num mov edx , num mov esi , num mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num mov eax , num call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov ecx , num mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov ecx , num mov edx , num mov esi , num mov edi , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] mov edx , eax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] mov edx , eax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov ecx , num mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov ecx , num mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov ecx , num mov edx , num mov esi , num mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov ecx , num mov edx , num mov esi , num mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , ecx mov ecx , esi mov byte ptr [ rbp - num ] , cl mov byte ptr [ rbp - hexvar ] , dl mov byte ptr [ rbp - hexvar ] , al cmp dword ptr [ rbp - num ] , num jle hexvar movsx ecx , byte ptr [ rbp - hexvar ] movsx edx , byte ptr [ rbp - hexvar ] movsx eax , byte ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] lea edi , [ rsi - num ] mov esi , eax call hexvar movsx edx , byte ptr [ rbp - hexvar ] movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx ecx , byte ptr [ rbp - hexvar ] movsx edx , byte ptr [ rbp - num ] movsx eax , byte ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] lea edi , [ rsi - num ] mov esi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rcx + rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov edx , dword ptr [ rax ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , num call hexvar test al , al je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , num mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num mov rax , qword ptr [ rax + rdx * num + num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num mov rax , qword ptr [ rax + rdx * num + num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] lea esi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov ecx , dword ptr [ rax + rdx * num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , esi mov dword ptr [ rax + rdx * num ] , ecx mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num mov rdx , qword ptr [ rax + rdx * num + num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , ecx add rcx , num mov qword ptr [ rax + rcx * num + num ] , rdx sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add eax , eax add eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add eax , eax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov eax , dword ptr [ rbp - num ] add eax , ecx movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] sub eax , num cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cdqe imul edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar jmp hexvar mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , edx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num call hexvar cmp eax , num jg hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jg hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , al movsx eax , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , al mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov qword ptr [ rip + hexvar ] , rax jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov dword ptr [ rbp - hexvar ] , esi mov byte ptr [ rbp - hexvar ] , al mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov esi , num mov edi , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edi , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] add edx , num mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul edx , edx , hexvar sub eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add edx , eax mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , ecx imul eax , edx cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov ecx , dword ptr [ rbp + hexvar ] mov edx , dword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov ecx , dword ptr [ rbp + hexvar ] mov edx , dword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + num ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov eax , hexvar sub eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jg hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jle hexvar sub dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jle hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] movabs rcx , hexvar mov qword ptr [ rax ] , rcx nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] cmp rax , rdx je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] cmp rax , rdx jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax ] , rdx add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov dword ptr [ rbp - hexvar ] , eax nop cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , edx shl eax , num sub eax , edx movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] movss xmm0 , dword ptr [ rdx + rax ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , dword ptr [ rax + rdx * num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov dword ptr [ rax + rdx * num ] , ecx add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] lea esi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov ecx , dword ptr [ rax + rdx * num ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , esi mov dword ptr [ rax + rdx * num ] , ecx sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar sete al movzx eax , al pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax sete al movzx eax , al pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num movsx edx , al mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num setne al movzx edx , al cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov edi , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov r8d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov edi , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] add edx , num mov rcx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rcx + hexvar ] lea esi , [ rcx + hexvar ] mov r9d , r8d mov r8d , edi mov ecx , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax ] cmp ax , num jne hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe mov rdi , rax call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax ] cmp ax , num jne hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cdqe mov rdi , rax call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] cmp rdx , rax jbe hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi movss dword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rax ] movss dword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - num ] , num jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movaps xmm1 , xmm0 mulss xmm1 , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] addss xmm0 , xmm1 cvttss2si eax , xmm0 mov byte ptr [ rbp - num ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar movsx eax , byte ptr [ rbp - num ] pxor xmm0 , xmm0 cvtsi2ss xmm0 , eax pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi movss dword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rax ] movss dword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - num ] , num jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movaps xmm1 , xmm0 mulss xmm1 , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] addss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov edx , dword ptr [ rdx ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rax ] test eax , eax je hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx test edx , edx jne hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop jmp hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax add ecx , ecx add ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jg hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar nop mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num jmp hexvar call hexvar cmp dword ptr [ rbp - num ] , num jle hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar nop call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp lea rax , [ rbp + hexvar ] mov rdx , rax lea rsi , [ rbp + hexvar ] lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] movzx ecx , byte ptr [ rcx ] mov eax , dword ptr [ rbp - hexvar ] cdqe mov byte ptr [ rdx + rax ] , cl add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe mov byte ptr [ rdx + rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe movzx edx , byte ptr [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rip + hexvar ] mov byte ptr [ rax + rcx ] , dl add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx mov rdx , qword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx sub dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rdx ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov esi , edx sar esi , hexvar mov ecx , eax sub ecx , esi mov eax , ecx add eax , eax add eax , ecx add eax , eax sub edx , eax mov ecx , edx lea eax , [ rcx + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num add ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov ecx , eax shl edx , cl mov eax , edx not eax mov edx , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , num mov ecx , eax shl edx , cl mov eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] xor eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , num mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov dword ptr [ rbp - num ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] and eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] shl eax , hexvar or eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num and dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar add dword ptr [ rbp - num ] , num shr dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov ecx , eax shl edx , cl mov eax , edx not eax mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , num mov edx , dword ptr [ rbp - num ] mov ecx , eax shl edx , cl mov eax , edx not eax and eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov edx , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , num mov ecx , eax shl edx , cl mov eax , edx or eax , esi pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar test al , al jne hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rcx , qword ptr [ rdx ] mov rdx , rax mov rsi , rcx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jae hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax sete al movzx eax , al leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , ecx mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , ecx mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test al , al je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] add dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar xor eax , num movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] add dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl nop add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num je hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] add eax , num mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl movsx eax , byte ptr [ rbp - num ] movsx edx , byte ptr [ rbp - num ] sub edx , num cmp eax , edx jl hexvar movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rbp - num ] , al mov byte ptr [ rbp - num ] , num sub qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , ecx mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar sub dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num js hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 lea rax , [ rip + hexvar ] mov rcx , rax lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm2 , dword ptr [ rip + hexvar ] movaps xmm1 , xmm0 subss xmm1 , xmm2 movss xmm0 , dword ptr [ rip + hexvar ] mulss xmm0 , xmm1 movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] subsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm2 , xmm1 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - hexvar ] addss xmm0 , dword ptr [ rbp - num ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num call hexvar cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num mov edi , hexvar call hexvar mov edi , hexvar call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm2 , dword ptr [ rip + hexvar ] movaps xmm1 , xmm0 subss xmm1 , xmm2 movss xmm0 , dword ptr [ rip + hexvar ] mulss xmm0 , xmm1 movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 cvtss2sd xmm0 , xmm0 pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - num ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pxor xmm1 , xmm1 comiss xmm0 , xmm1 jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rax mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] movsxd rcx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num lea rcx , [ rip + hexvar ] add rax , rcx add rax , num mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rcx , rax lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] mov esi , num mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rip + hexvar ] subsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov rsi , rax mov edi , num mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx ] add rdx , hexvar mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx ] mov rsi , rcx mov ecx , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rdx , qword ptr [ rdx ] add rdx , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov rsi , rcx mov ecx , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx ] add rdx , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + num ] mov rcx , qword ptr [ rcx ] mov rsi , rcx mov ecx , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax js hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] mov edx , num mov ecx , eax shl edx , cl mov eax , edx not eax mov edx , eax movzx eax , byte ptr [ rbp - num ] and eax , edx mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] mov edx , num mov ecx , eax shl edx , cl mov eax , edx mov edx , eax movzx eax , byte ptr [ rbp - num ] or eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov dword ptr [ rbp - num ] , esi mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , num mov ecx , eax shl esi , cl mov eax , esi and edx , eax mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi pxor xmm0 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , eax pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax subsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si eax , xmm0 mov edi , eax call hexvar pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movapd xmm1 , xmm0 movq xmm0 , rax call hexvar movq rax , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jae hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jae hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jg hexvar movsd xmm0 , qword ptr [ rip + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edi , eax call hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - num ] mulsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + hexvar ] test eax , eax cmovs eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov ecx , edx mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] sub al , byte ptr [ rbp - hexvar ] mov edx , eax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov edx , eax movzx eax , byte ptr [ rbp - hexvar ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar lea rax , [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar jmp hexvar mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax + rdx * num ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi call hexvar cdq idiv dword ptr [ rbp - num ] mov eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi call hexvar cdq idiv dword ptr [ rbp - num ] mov eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rcx + rdx ] , rax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cdqe cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rsi add rax , rcx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx add edx , edx add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx add edx , edx add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rsi add rax , rcx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rsi add rax , rcx mov byte ptr [ rax ] , num jmp hexvar nop jmp hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx add rax , rsi add rax , rcx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar mov edi , hexvar call hexvar jmp hexvar mov edi , hexvar call hexvar jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , num mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rcx , rax mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rcx , rax mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , num sub eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - num ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov edi , hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , ecx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - num ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movd xmm0 , eax call hexvar cvtss2sd xmm0 , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov edi , hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm1 , xmm1 cvtsi2ss xmm1 , dword ptr [ rbp - num ] movss xmm0 , dword ptr [ rbp - hexvar ] subss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm1 , xmm1 cvtsi2ss xmm1 , dword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , xmm1 jae hexvar mov edi , hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov edi , hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov edx , edi mov eax , esi mov byte ptr [ rbp - num ] , dl mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] cmp al , byte ptr [ rbp - num ] jne hexvar mov eax , hexvar jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx mov ecx , hexvar add eax , eax sub ecx , num jne hexvar mov edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx mov ecx , num add eax , eax add ecx , num cmp ecx , hexvar jne hexvar mov edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx mov ecx , num add eax , eax sub ecx , num jne hexvar mov edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx xor ecx , ecx add eax , eax inc ecx cmp ecx , hexvar jne hexvar mov edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num sub rax , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax mov edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] cmp eax , num jg hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jbe hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar shl dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , num sub eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar cmp eax , num jg hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , hexvar sub eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] cmp edx , eax cmovle eax , edx mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - num ] imul rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - num ] cqo idiv rcx mov rax , rdx test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rsi , eax mov rax , qword ptr [ rbp - num ] cqo idiv rsi mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdi , edx cqo idiv rdi mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movzx eax , byte ptr [ rbp - num ] sub eax , hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] cmp edx , eax cmovle eax , edx mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - num ] imul rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - num ] cqo idiv rcx mov rax , rdx test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rsi , eax mov rax , qword ptr [ rbp - num ] cqo idiv rsi mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdi , edx cqo idiv rdi mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - num ] imul rax , rdx mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - num ] , rax nop call hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - num ] add rdx , rcx cmp rax , rdx jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp ecx , eax jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp ecx , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr ecx , hexvar add eax , ecx sar eax , num mov esi , edx mov edi , eax call hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rcx , rax mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rdx , xmm1 mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov r8 , rdi movq xmm0 , rdx mov rdx , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movabs rdx , hexvar mul rdx mov rax , rdx shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rcx + rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rsi , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rsi ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rdx * num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rsi , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rsi mov eax , dword ptr [ rcx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rdx + num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num jmp hexvar mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , num call hexvar test eax , eax je hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar jmp hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , edx shl eax , num add eax , edx mov dword ptr [ rcx ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx add rax , rax lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx add rax , rax lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx add rax , rax lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num je hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar jmp hexvar nop mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar mov edi , hexvar call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar mov edi , hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , ecx mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movq rax , xmm0 movdqa xmm0 , xmm1 mov qword ptr [ rbp - hexvar ] , rax movq qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] movq xmm0 , rax movq xmm1 , rdx call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movq rax , xmm0 movdqa xmm0 , xmm1 movq rdx , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - hexvar ] pxor xmm2 , xmm2 cvtss2sd xmm2 , xmm0 movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - hexvar ] pxor xmm3 , xmm3 cvtss2sd xmm3 , xmm0 movq rax , xmm3 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - num ] pxor xmm4 , xmm4 cvtss2sd xmm4 , xmm0 movq rax , xmm4 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - num ] pxor xmm5 , xmm5 cvtss2sd xmm5 , xmm0 movq rax , xmm5 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm1 , dword ptr [ rax ] comiss xmm0 , xmm1 jbe hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] cvttss2si eax , xmm0 mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movss xmm0 , dword ptr [ rdx ] movss dword ptr [ rax ] , xmm0 mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss dword ptr [ rax ] , xmm0 add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , edx shl eax , num add eax , edx mov dword ptr [ rcx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - num ] addsd xmm0 , qword ptr [ rbp - hexvar ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax call rdx movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movsd xmm0 , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp lea rax , [ rbp + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movzx eax , byte ptr [ rbp - num ] and eax , hexvar or eax , num mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] and eax , num movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , esi mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , hexvar cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov eax , hexvar cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar jbe hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar jbe hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar cmp eax , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] add eax , num cmp eax , hexvar jbe hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar sub dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] lea esi , [ rdx + rax ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rcx , rdx shl rcx , num lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rcx , rax lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rip + hexvar ] , eax mov qword ptr [ rip + hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov rcx , rdx shl rcx , num lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov rcx , rdx shl rcx , num lea rdx , [ rip + hexvar ] add rdx , rcx mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov rcx , rdx shl rcx , num lea rdx , [ rip + hexvar ] add rdx , rcx mov qword ptr [ rax + num ] , rdx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num mov rcx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rcx + rax ] , edx mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar add eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , edx pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 pxor xmm2 , xmm2 cvtsi2sd xmm2 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm2 addsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] pxor xmm2 , xmm2 cvtsi2sd xmm2 , eax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm2 addsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] add rax , num mov eax , dword ptr [ rax ] pxor xmm2 , xmm2 cvtsi2sd xmm2 , eax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm2 addsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rbp - num ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar movsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd xmm1 , qword ptr [ rbp - num ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar movsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call rcx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jns hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] neg eax jmp hexvar mov eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , hexvar sub eax , edx mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov edx , eax mov eax , num sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov dword ptr [ rax + rdx * num + num ] , ecx jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov esi , edx sar esi , hexvar mov ecx , eax sub ecx , esi mov eax , ecx add eax , eax add eax , ecx add eax , eax sub edx , eax mov ecx , edx lea eax , [ rcx + num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] cmp eax , - num je hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + rax ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jns hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] neg eax jmp hexvar mov eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov eax , hexvar sub eax , edx mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov edx , eax mov eax , num sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov dword ptr [ rax + rdx * num + num ] , ecx jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx mov ecx , edx shl ecx , num add ecx , edx sub eax , ecx mov edx , eax lea eax , [ rdx + num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov esi , edx sar esi , hexvar mov ecx , eax sub ecx , esi mov eax , ecx add eax , eax add eax , ecx add eax , eax sub edx , eax mov ecx , edx lea eax , [ rcx + num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 movss dword ptr [ rbp - num ] , xmm1 movss xmm0 , dword ptr [ rbp - num ] divss xmm0 , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num cmp byte ptr [ rbp - hexvar ] , hexvar jle hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - hexvar ] lea edx , [ rax - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax mov eax , edx add eax , hexvar mov byte ptr [ rbp - num ] , al jmp hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jle hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - hexvar ] lea edx , [ rax - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax mov eax , edx add eax , hexvar mov byte ptr [ rbp - num ] , al jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] push rdi push rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] sub rsp , num push rsi mov r9d , r8d mov r8d , edi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar mov eax , num jmp hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar cmp eax , num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar cmp eax , num je hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar cmp eax , num je hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe shl rax , num add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cdqe shl rax , num add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num add rax , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num add rax , rdx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov r8 , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] mov r8 , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov r8 , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] mov r8 , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] mov r8 , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rdx , xmm1 mov rax , qword ptr [ rbp - num ] lea r8 , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov r9d , edi movq xmm0 , rdx mov rdx , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov edi , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rdx , xmm1 mov rax , qword ptr [ rip + hexvar ] lea r8 , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax + num ] mov r9d , edi movq xmm0 , rdx mov rdx , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] lea rsi , [ rcx + hexvar ] mov rcx , rdx mov edx , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , eax lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num lea ecx , [ rax + rax ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jg hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] add qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx ] mov rdx , rax mov rsi , rcx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , hexvar call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jae hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx mov rdx , rax mov eax , dword ptr [ rbp - num ] cdqe cmp rdx , rax jl hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe neg rax add rax , rdx jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx mov rdx , rax mov eax , dword ptr [ rbp - num ] cdqe cmp rdx , rax jl hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe neg rax add rax , rdx jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , num pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movss xmm1 , dword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rip + hexvar ] mulss xmm0 , xmm1 movss xmm2 , dword ptr [ rip + hexvar ] movaps xmm1 , xmm0 divss xmm1 , xmm2 movss xmm0 , dword ptr [ rip + hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 call hexvar cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , eax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movq rdx , xmm1 mov eax , dword ptr [ rbp - num ] movq xmm0 , rdx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax call hexvar cmp eax , - num setne al movzx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm2 , dword ptr [ rip + hexvar ] movaps xmm1 , xmm0 subss xmm1 , xmm2 movss xmm0 , dword ptr [ rip + hexvar ] mulss xmm0 , xmm1 movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rip + hexvar ] mov byte ptr [ rax + rcx ] , dl mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov ecx , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jg hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] mov ecx , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax cmovle eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax cmovle eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rcx , rdx mov rax , rsi mov rdx , rdi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax jl hexvar mov eax , dword ptr [ rbp - num ] test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax je hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax jl hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax jge hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num mov rdx , rax shr rdx , hexvar add rax , rdx sar rax , num shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar neg dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , num cmp eax , hexvar jbe hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov edi , eax call hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx lea eax , [ rdx + hexvar ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rdx + rax ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - num ] , num mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar nop jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num mov qword ptr [ rbp - hexvar ] , num mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - num ] , num mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , ecx mov ecx , esi mov byte ptr [ rbp - num ] , cl mov byte ptr [ rbp - hexvar ] , dl mov byte ptr [ rbp - hexvar ] , al cmp dword ptr [ rbp - num ] , num jne hexvar movsx edx , byte ptr [ rbp - hexvar ] movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx ecx , byte ptr [ rbp - hexvar ] movsx edx , byte ptr [ rbp - hexvar ] movsx eax , byte ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] lea edi , [ rsi - num ] mov esi , eax call hexvar movsx ecx , byte ptr [ rbp - hexvar ] movsx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx ecx , byte ptr [ rbp - num ] movsx edx , byte ptr [ rbp - hexvar ] movsx eax , byte ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - num ] lea edi , [ rsi - num ] mov esi , eax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov edi , hexvar call hexvar jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num call hexvar mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax + rcx ] , dl nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jg hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax - num ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax + rcx ] , dl mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar mov dword ptr [ rip + hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , num call hexvar mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , num call hexvar mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax + rcx ] , dl nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , edx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jle hexvar add dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rdx , rax mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rcx mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rdx , rax mov rcx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num shl rax , num add rax , rcx mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] or eax , edx mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , num mov edi , eax call hexvar sar dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] je hexvar mov eax , hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] sar rax , num mov esi , edx mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar ja hexvar lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov edi , hexvar call hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov edi , eax call hexvar test al , al je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] add eax , num cmp eax , hexvar ja hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov esi , edx mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov eax , ecx shl eax , num add eax , ecx add eax , eax add eax , ecx sub edx , eax mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rcx + rdx ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi call hexvar cdq idiv dword ptr [ rbp - num ] mov eax , edx leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] sub eax , edx mov edx , eax neg edx cmovns eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jg hexvar mov eax , dword ptr [ rip + hexvar ] pxor xmm0 , xmm0 cvtsi2ss xmm0 , eax mov eax , dword ptr [ rip + hexvar ] pxor xmm1 , xmm1 cvtsi2ss xmm1 , eax divss xmm0 , xmm1 leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movss dword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] mov esi , ecx mov edi , eax call hexvar call hexvar movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , ecx mov edi , edx movd xmm0 , eax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al add dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov esi , eax mov eax , dword ptr [ rbp - num ] cdqe movzx edx , byte ptr [ rdx + rax ] movsxd rax , esi mov byte ptr [ rcx + rax ] , dl mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov esi , eax mov eax , dword ptr [ rbp - num ] cdqe movzx edx , byte ptr [ rdx + rax ] movsxd rax , esi mov byte ptr [ rcx + rax ] , dl mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov esi , eax mov eax , dword ptr [ rbp - num ] cdqe movzx edx , byte ptr [ rdx + rax ] movsxd rax , esi mov byte ptr [ rcx + rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , hexvar sub eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx edx , byte ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov byte ptr [ rcx + rax ] , dl mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , hexvar sub eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx edx , byte ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov byte ptr [ rcx + rax ] , dl mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , hexvar sub eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rcx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx edx , byte ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov byte ptr [ rcx + rax ] , dl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx imul rcx , rdx , hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx not eax mov ecx , eax mov eax , dword ptr [ rbp - num ] cdqe mov byte ptr [ rdx + rax ] , cl mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx imul rcx , rdx , hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx not eax mov ecx , eax mov eax , dword ptr [ rbp - num ] cdqe mov byte ptr [ rdx + rax ] , cl mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx imul rcx , rdx , hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx not eax mov ecx , eax mov eax , dword ptr [ rbp - num ] cdqe mov byte ptr [ rdx + rax ] , cl add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edx , dword ptr [ rbp - num ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , - hexvar shr rdx , hexvar add edx , eax sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax jmp hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx cmp dword ptr [ rbp - num ] , eax jle hexvar mov edi , hexvar call hexvar jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar sub dword ptr [ rbp - num ] , num mov edi , hexvar call hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movsx ecx , al mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] movq xmm0 , rsi mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] movsx edi , al mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi movq xmm0 , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov rax , qword ptr [ rax ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] sub rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num shl rax , num add rcx , rax mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rax , rsi mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] sub rdx , num mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rax , num jbe hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] shr rax , num cmp rdx , rax jae hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] shr rdx , num mov qword ptr [ rax + num ] , rdx lea rax , [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov eax , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num mov r9d , num mov r8d , edx mov ecx , num mov edx , num mov rsi , rax mov edi , num call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] cmp rax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , num pxor xmm0 , xmm0 movss dword ptr [ rip + hexvar ] , xmm0 mov dword ptr [ rip + hexvar ] , num pxor xmm0 , xmm0 movss dword ptr [ rip + hexvar ] , xmm0 mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rip + hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx esi , byte ptr [ rax ] mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov edi , ecx sar edi , hexvar sub eax , edi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx cmp dword ptr [ rbp - hexvar ] , edx jne hexvar mov ecx , hexvar jmp hexvar mov ecx , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx lea edx , [ rcx + rsi ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov eax , edx shl eax , num add eax , edx add eax , eax lea edx , [ rax - num ] mov eax , dword ptr [ rbp - num ] cmp edx , eax ja hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar sub eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rdx lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movapd xmm1 , xmm0 divsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx test edx , edx je hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx edx , byte ptr [ rax ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rsi , qword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] mov eax , ecx shl eax , num add eax , ecx add eax , eax mov ecx , eax mov eax , dword ptr [ rbp - num ] add eax , ecx mov eax , eax add rax , rsi mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rip + hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov eax , dword ptr [ rbp - num ] cmp edx , eax ja hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar sub eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar sub eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar call hexvar mov edi , hexvar call hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rdx lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm0 mov eax , dword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 movapd xmm1 , xmm0 divsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] add eax , edx jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar imul eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edi , eax call hexvar mov edx , dword ptr [ rbp - hexvar ] imul eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , num jmp hexvar movsx eax , byte ptr [ rbp - num ] add eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - num ] add eax , num mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx cmp dword ptr [ rbp - num ] , num jle hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm2 , dword ptr [ rip + hexvar ] movaps xmm1 , xmm0 subss xmm1 , xmm2 movss xmm0 , dword ptr [ rip + hexvar ] mulss xmm0 , xmm1 movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 cvtss2sd xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar mov dword ptr [ rbp - num ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov byte ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar movsx eax , byte ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] add eax , num mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov byte ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , num mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] imul eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] add dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , eax cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num nop cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] jmp hexvar mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] neg eax mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - hexvar ] , xmm0 movss dword ptr [ rbp - hexvar ] , xmm1 pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mulss xmm0 , dword ptr [ rbp - hexvar ] cvtss2sd xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jns hexvar neg dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov edi , eax call hexvar cmp rax , - num jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar call hexvar test eax , eax je hexvar mov edi , num call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov edi , num call hexvar mov edi , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] neg eax mov esi , hexvar mov edi , eax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe imul rcx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar cmp eax , num jg hexvar cmp eax , num je hexvar cmp eax , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rax + rdx ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rax + rdx ] jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] neg eax mov edx , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , edx call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi jmp hexvar mov edi , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , eax je hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] add eax , num mov byte ptr [ rip + hexvar ] , al mov dword ptr [ rip + hexvar ] , hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov dword ptr [ rbp - num ] , edi mov eax , num call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar test al , al je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , num div dword ptr [ rbp - num ] mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar add dword ptr [ rbp - num ] , eax shr dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx sub eax , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movzx eax , ax mov edi , eax call hexvar test al , al jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax and word ptr [ rbp - num ] , num cmp word ptr [ rbp - num ] , num sete al pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar test al , al je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , num div dword ptr [ rbp - hexvar ] mov eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax fld1 fstp xword ptr [ rbp - hexvar ] fldz fstp xword ptr [ rbp - hexvar ] jmp hexvar fld xword ptr [ rbp - hexvar ] fld1 fadd st ( num ) fstp xword ptr [ rbp - hexvar ] fld1 fdivrp st ( num ) fld xword ptr [ rbp - hexvar ] faddp st ( num ) fstp xword ptr [ rbp - hexvar ] fld xword ptr [ rbp - hexvar ] fld xword ptr [ rip + hexvar ] fcompi st ( num ) fstp st ( num ) ja hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] push qword ptr [ rbp - num ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movq xmm0 , rdx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe cmp qword ptr [ rbp - hexvar ] , rax ja hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movq xmm0 , rdx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe cmp qword ptr [ rbp - hexvar ] , rax ja hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov word ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - num ] , hexvar jmp hexvar shl word ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp word ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar shl qword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al nop add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] movsx ecx , al mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] movsx edx , al mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax + num ] movsx ecx , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax + num ] movsx edx , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax + num ] movsx ecx , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax + num ] movsx edx , al mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - num ] mov ecx , num mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] lea rdi , [ rdx + num ] sub rsp , num push num mov r9d , num mov r8d , num mov ecx , hexvar lea rdx , [ rip + hexvar ] mov esi , eax call hexvar add rsp , hexvar lea rax , [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - num ] mov ecx , num mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - num ] mov ecx , num mov edi , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] lea rdi , [ rcx + num ] sub rsp , num push num mov r9d , num mov r8d , num mov ecx , hexvar mov esi , eax call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov esi , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov edx , edi mov eax , esi mov byte ptr [ rbp - num ] , dl mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al movzx eax , word ptr [ rip + hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] mov word ptr [ rip + hexvar ] , ax movzx eax , byte ptr [ rip + hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] mov word ptr [ rip + hexvar ] , ax movzx eax , byte ptr [ rip + hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movss dword ptr [ rbp - hexvar ] , xmm0 call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , eax movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - num ] seta al leave ret
endbr64 push rbp mov rbp , rsp mov edx , edi mov eax , esi mov byte ptr [ rbp - num ] , dl mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al movzx eax , word ptr [ rip + hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] mov word ptr [ rip + hexvar ] , ax movzx eax , byte ptr [ rip + hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - num ] , ax movzx eax , word ptr [ rbp - num ] mov word ptr [ rip + hexvar ] , ax movzx eax , byte ptr [ rip + hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov byte ptr [ rdx ] , al add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar xor eax , num test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , num cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , num mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar seta dl test dl , dl jne hexvar mov edx , num mov ecx , eax shl rdx , cl mov rax , rdx movabs rdx , hexvar and rdx , rax test rdx , rdx setne dl test dl , dl jne hexvar movabs rdx , hexvar and rdx , rax test rdx , rdx setne dl test dl , dl jne hexvar movabs rdx , hexvar and rax , rdx test rax , rax setne al test al , al je hexvar mov edi , num call hexvar movq rax , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov edi , num call hexvar movq rax , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar nop cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov edi , num call hexvar mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - num ] divsd xmm0 , qword ptr [ rbp - hexvar ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - num ] subsd xmm0 , qword ptr [ rbp - hexvar ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - num ] addsd xmm0 , qword ptr [ rbp - hexvar ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edi , eax call hexvar imul eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] sub eax , num cmp dword ptr [ rbp - num ] , eax je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , edx call hexvar imul eax , dword ptr [ rbp - num ] jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov rcx , rax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] pxor xmm0 , xmm0 cvtsi2ss xmm0 , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] pxor xmm1 , xmm1 cvtsi2ss xmm1 , eax divss xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movss dword ptr [ rax ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] movss xmm2 , dword ptr [ rax ] pxor xmm1 , xmm1 cvtsi2ss xmm1 , dword ptr [ rbp - num ] mulss xmm1 , xmm2 subss xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movss dword ptr [ rax ] , xmm0 mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , ecx mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] shl eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] cmp edx , eax cmovle eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , num call hexvar mov eax , num call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar cmp eax , num jne hexvar mov eax , num call hexvar mov eax , num call hexvar mov eax , num call hexvar mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jg hexvar jmp hexvar nop mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov dword ptr [ rdx + rax * num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov dword ptr [ rdx + rax * num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] test eax , eax jne hexvar mov edi , hexvar call hexvar jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar sub dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar imul eax , dword ptr [ rbp - num ] add dword ptr [ rbp - hexvar ] , eax shl dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] sub eax , hexvar jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jle hexvar cmp byte ptr [ rbp - num ] , hexvar jg hexvar movsx eax , byte ptr [ rbp - num ] sub eax , hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , num mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rdx + rax ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , hexvar jmp hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , eax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movq rdx , xmm1 mov eax , dword ptr [ rbp - num ] movq xmm0 , rdx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar call hexvar mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub dword ptr [ rbp - num ] , num jmp hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num je hexvar cmp dword ptr [ rbp - num ] , num js hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax - hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar movss xmm0 , dword ptr [ rbp - hexvar ] cvttss2si edx , xmm0 movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rip + hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + hexvar ] test eax , eax cmovs eax , edx sar eax , num mov esi , eax mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , esi mov rdx , qword ptr [ rax + rdx * num ] mov eax , dword ptr [ rbp - num ] and eax , hexvar mov edi , num mov ecx , eax shl rdi , cl mov rax , rdi mov rcx , rdx or rcx , rax mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , esi mov qword ptr [ rax + rdx * num ] , rcx mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] sub edx , ecx sub edx , num mov ecx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , eax ja hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rsi , hexvar movabs rdi , hexvar mov qword ptr [ rax ] , rsi mov qword ptr [ rax + num ] , rdi mov dword ptr [ rax + hexvar ] , hexvar mov word ptr [ rax + hexvar ] , hexvar mov byte ptr [ rax + hexvar ] , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rcx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] sub eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov word ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar fld xword ptr [ rip + hexvar ] fstp xword ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , hexvar mov byte ptr [ rbp - hexvar ] , hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edx , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - hexvar ] mov edx , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , hexvar mov byte ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num movsx eax , byte ptr [ rbp - num ] movsx edx , byte ptr [ rbp - num ] sub eax , edx add eax , num mov dword ptr [ rbp - num ] , eax movzx eax , byte ptr [ rbp - num ] add eax , hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx edx , byte ptr [ rbp - num ] movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm0 movsd xmm1 , qword ptr [ rbp - hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsd xmm0 , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , eax shl dword ptr [ rbp - num ] , cl mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] add eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx add dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax mov ecx , edx sub ecx , eax mov eax , dword ptr [ rip + hexvar ] add eax , ecx mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , eax shl dword ptr [ rbp - num ] , cl mov eax , dword ptr [ rbp - hexvar ] or eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , eax shl dword ptr [ rbp - num ] , cl not dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar add dword ptr [ rbp - hexvar ] , num shl dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdq idiv ecx mov eax , edx test eax , eax jne hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] add eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al je hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num shl dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , eax shl dword ptr [ rbp - hexvar ] , cl mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , eax shl dword ptr [ rbp - hexvar ] , cl mov eax , dword ptr [ rbp - hexvar ] or eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar sub qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl sub qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar sub qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] xor eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] shr eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , eax shl dword ptr [ rbp - num ] , cl mov eax , dword ptr [ rbp - hexvar ] xor eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jl hexvar mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdq idiv ecx mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov esi , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] add eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov edx , dword ptr [ rbp - hexvar ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar sub qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num sub qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar add dword ptr [ rbp - num ] , num mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov edi , hexvar call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , num nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num jmp hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov esi , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar sub qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num sub qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , hexvar call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rbp + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rbp + hexvar ] cmp eax , - num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rbp + rax * num + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] movsxd rdx , edx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + rdx * num + num ] , ecx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov esi , dword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp + hexvar ] lea edx , [ rax + num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num add ecx , eax mov eax , edx sub eax , ecx cmp esi , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rbp + hexvar ] cmp eax , - num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rbp + rax * num + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp + hexvar ] cmp dword ptr [ rbp - num ] , eax je hexvar mov eax , dword ptr [ rbp - num ] add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx shl edx , num add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num add ecx , eax mov eax , edx sub eax , ecx mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rdx ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov edi , hexvar call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] imul eax , eax mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov ecx , dword ptr [ rip + hexvar ] cdq idiv ecx mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] add eax , num mov ecx , dword ptr [ rip + hexvar ] cdq idiv ecx mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar jmp hexvar nop mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num lea rdx , [ rcx + rax ] movsx eax , byte ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea ecx , [ rax - num ] mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx ] , ecx cdqe shl rax , num add rax , rsi mov eax , dword ptr [ rax ] jmp hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , - num sete al movzx eax , al pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov eax , eax shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp eax , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax + rcx ] , dl nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx add edx , num mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , - hexvar shr rdx , hexvar add edx , eax sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax lea eax , [ rdx + num ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx add rdx , num lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , - hexvar shr rdx , hexvar add edx , eax sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax lea eax , [ rdx + num ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - num ] divsd xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 pxor xmm0 , xmm0 cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rax ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] mulsd xmm1 , xmm2 subsd xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - num ] imul rax , rdx mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - num ] imul rax , rdx mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rbx , rax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov r12 , rax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rdx , r12 imul rdx , rax mov rcx , rdx mov rax , rbx cqo idiv rcx add rsp , hexvar pop rbx pop r12 pop rbp ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - num ] , xmm0 movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax sete al movzx edx , al mov eax , dword ptr [ rbp - num ] movsxd rsi , eax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx shl rax , num add rax , rcx add rax , rax add rax , rsi lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rcx + rax ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rcx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] test eax , eax je hexvar mov edi , hexvar call hexvar jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edx , dword ptr [ rbp - num ] lea ecx , [ rdx + num ] mov edx , eax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx test edx , edx jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rcx + rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax lea ecx , [ rdx + num ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , ecx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx test edx , edx jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx add edx , num mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] shl rax , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] sub rax , rdx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp eax , num je hexvar cmp eax , num jg hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov qword ptr [ rip + hexvar ] , rax nop mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov byte ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] test ax , ax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar movzx eax , byte ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , byte ptr [ rbp - hexvar ] add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , byte ptr [ rbp - hexvar ] add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar sete al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edi , eax call hexvar test al , al je hexvar movsx eax , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num ja hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edi , eax call hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] shl rax , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] shl rax , num add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov eax , dword ptr [ rip + hexvar ] cdqe add rdx , rax mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] sub rax , rdx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax call hexvar cmp eax , num je hexvar cmp eax , num jg hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov qword ptr [ rip + hexvar ] , rax nop mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov byte ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] test ax , ax je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar movzx eax , byte ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , byte ptr [ rbp - hexvar ] add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movsx edx , ax movzx eax , byte ptr [ rbp - hexvar ] add eax , edx cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cwde mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num sete al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num nop call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , ecx movsxd rdx , eax lea rcx , [ rip + hexvar ] mov byte ptr [ rdx + rcx ] , sil cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num nop call hexvar mov ecx , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , ecx movsxd rdx , eax lea rcx , [ rip + hexvar ] mov byte ptr [ rdx + rcx ] , sil cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edi , num call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num pxor xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] pxor xmm0 , xmm0 cvtsi2ss xmm0 , eax movss xmm1 , dword ptr [ rbp - num ] addss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar pxor xmm1 , xmm1 cvtsi2ss xmm1 , dword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rbp - num ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num js hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , hexvar cmp dword ptr [ rbp - num ] , eax jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rbp + rax + hexvar ] cmp dl , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rbp + rax + hexvar ] mov byte ptr [ rdx ] , al jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num nop cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rbp + rax + hexvar ] cmp dl , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rbp + rax + hexvar ] mov byte ptr [ rdx ] , al jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al nop add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num lea rcx , [ rdx - num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add qword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] subsd xmm0 , xmm1 movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar cmp eax , - num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , eax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movq rdx , xmm1 mov eax , dword ptr [ rbp - num ] movq xmm0 , rdx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rip + hexvar ] jb hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edi , eax call hexvar mov edx , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num add ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , num mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , num add edx , num mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , hexvar jne hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num add ecx , eax mov eax , edx sub eax , ecx test eax , eax je hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax add ecx , ecx add ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num imul eax , dword ptr [ rbp - num ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm2 , xmm2 cvtss2sd xmm2 , xmm0 movq rdx , xmm2 mov rax , qword ptr [ rbp - num ] lea rdi , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] movq xmm0 , rdx mov r8 , rdi mov rdx , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rax + hexvar ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rax + hexvar ] pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movq rcx , xmm1 mov rax , qword ptr [ rbp - hexvar ] lea r8 , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdi , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] movq xmm0 , rcx mov r9 , r8 mov r8 , rdi mov rcx , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 pxor xmm1 , xmm1 cvtss2sd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] lea edx , [ rax - hexvar ] mov eax , edx shl eax , num add eax , edx movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - hexvar ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , num call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax lea eax , [ rdx + num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] cmp ecx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar pxor xmm1 , xmm1 cvtsi2ss xmm1 , dword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rbp - hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm1 , dword ptr [ rax ] comiss xmm0 , xmm1 jbe hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm1 , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movss xmm0 , dword ptr [ rax ] comiss xmm0 , xmm1 jbe hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax * num ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edi , hexvar call hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov esi , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov r8d , dword ptr [ rbp - num ] mov edi , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] sub rsp , num mov esi , dword ptr [ rbp - num ] push rsi mov esi , dword ptr [ rbp - num ] push rsi mov esi , dword ptr [ rbp - num ] push rsi mov esi , dword ptr [ rbp - num ] push rsi mov esi , dword ptr [ rbp - num ] push rsi mov r9d , r8d mov r8d , edi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] movaps xmm1 , xmm0 subss xmm1 , dword ptr [ rbp - num ] movss xmm0 , dword ptr [ rbp - hexvar ] divss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - hexvar ] pxor xmm4 , xmm4 cvtss2sd xmm4 , dword ptr [ rbp - hexvar ] movq rax , xmm4 movapd xmm3 , xmm2 movapd xmm2 , xmm1 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al je hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jge hexvar sub dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jge hexvar sub dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , hexvar call hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jge hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jle hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx pxor xmm0 , xmm0 cvtsi2sd xmm0 , dword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] divsd xmm0 , xmm1 cvttsd2si eax , xmm0 mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] imul eax , eax , hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , eax movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rax ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx ecx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] cmp cl , al je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe movzx eax , byte ptr [ rdx + rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi movsd xmm1 , qword ptr [ rbp + hexvar ] movsd xmm0 , qword ptr [ rbp + hexvar ] mov rdx , qword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp - num ] movapd xmm2 , xmm1 movapd xmm1 , xmm0 movq xmm0 , rdx lea rdx , [ rbp + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov edx , dword ptr [ rax + rdx * num ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar cmp dword ptr [ rbp - hexvar ] , - num setne dl mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar setle al and eax , edx test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsd xmm0 , qword ptr [ rbp - num ] addsd xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] movsx rax , byte ptr [ rbp - num ] add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] add eax , num imul eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax jns hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] sub eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , num jne hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num nop cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num nop cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax je hexvar jmp hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] test eax , eax jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num nop cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - num ] movsxd rcx , ecx mov eax , dword ptr [ rax + rcx * num ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num + num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - num ] movsxd rcx , ecx mov eax , dword ptr [ rax + rcx * num ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] lea ecx , [ rax - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jb hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , num jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar nop add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] add eax , num cmp dword ptr [ rbp - num ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] shl eax , num mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , edx call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - num ] shl edx , num mov ecx , edx shl eax , cl add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rax + hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num movsxd rdx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num cmp dword ptr [ rbp - hexvar ] , - num sete al movzx eax , al mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num + num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] movsx eax , al jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + num ] mov qword ptr [ rbp - num ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov byte ptr [ rip + hexvar ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] movsx eax , al jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx cdqe mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar test eax , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rcx , rax mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rcx , rax mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] sub eax , dword ptr [ rbp - num ] cdqe add qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num mov eax , dword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , num jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rip + hexvar ] mov byte ptr [ rax + rcx ] , dl add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jg hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov edi , eax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num and dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sar dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp al , hexvar jg hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] add eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rip + hexvar ] mov byte ptr [ rdx + rcx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx mov dword ptr [ rbp - num ] , eax mov eax , hexvar sub eax , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shl edx , cl mov eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] xor eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov edi , eax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rip + hexvar ] mov byte ptr [ rax + rcx ] , dl add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx ecx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp cl , al je hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al sub dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov edx , num mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov esi , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov edx , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movd xmm0 , eax call hexvar cvtss2sd xmm0 , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] lea esi , [ rax + num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] shl eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar sub dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , eax , hexvar cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] imul eax , eax , hexvar movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - num ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - num ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar mov eax , dword ptr [ rbp - num ] movd xmm0 , eax call hexvar cvtss2sd xmm0 , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] subss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pxor xmm1 , xmm1 comiss xmm0 , xmm1 jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] sub edx , num mov dword ptr [ rax ] , edx jmp hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movd xmm0 , eax call hexvar cvtss2sd xmm0 , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov r8 , rcx mov rcx , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp eax , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jle hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add eax , ecx cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov esi , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add edx , eax mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , ecx cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rip + hexvar ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , rax mov eax , dword ptr [ rbp - num ] mov esi , eax mov rdi , rdx call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cmp eax , num jle hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax sar edx , cl mov eax , edx and eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num mov byte ptr [ rbp - num ] , num movzx edx , byte ptr [ rbp - num ] movzx eax , byte ptr [ rbp - num ] add eax , edx mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rip + hexvar ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx ecx , al mov eax , edx sub eax , ecx add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jle hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] add eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] sub eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jg hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] add eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] xor edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax + num ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar cmp dword ptr [ rbp - num ] , num jle hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar sar dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movd xmm0 , eax call hexvar cvtss2sd xmm0 , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rbp - hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 cvtsi2ss xmm0 , dword ptr [ rbp - num ] comiss xmm0 , dword ptr [ rbp - hexvar ] jae hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar nop call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar nop call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov edi , num call hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar nop call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar mov edi , hexvar call hexvar cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar nop mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num call hexvar cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar nop call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar je hexvar mov edi , hexvar call hexvar cmp dword ptr [ rbp - num ] , - num je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar jmp hexvar nop mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar cmp eax , - num setne al movzx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] xor dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] xor dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] xor dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax je hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov esi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , num xor byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] add eax , num mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov byte ptr [ rbp - num ] , hexvar movzx eax , byte ptr [ rbp - num ] sar al , num movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar nop mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sar dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] setg dl mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] setg al xor eax , edx test al , al je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movq rax , xmm1 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - num ] movq rax , xmm3 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov r9d , hexvar mov r8 , rcx mov ecx , num mov edi , eax call hexvar test rax , rax jns hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , hexvar jg hexvar jmp hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov word ptr [ rax + num ] , dx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , num mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov word ptr [ rdx + num ] , ax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rax ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] sub rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jns hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov esi , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov esi , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov esi , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] cvttss2si eax , xmm0 mov edx , eax neg edx cmovns eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - num ] cvttss2si eax , xmm0 mov edx , eax neg edx cmovns eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm0 , dword ptr [ rbp - num ] movss xmm1 , dword ptr [ rip + hexvar ] andps xmm0 , xmm1 pxor xmm2 , xmm2 cvtss2sd xmm2 , xmm0 movq rax , xmm2 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov dword ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rcx mov rsi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - num ] movq rax , xmm2 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm1 , dword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , dword ptr [ rbp - num ] jae hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 subsd xmm1 , xmm2 movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 pxor xmm0 , xmm0 cvtss2sd xmm0 , dword ptr [ rbp - num ] pxor xmm3 , xmm3 cvtss2sd xmm3 , dword ptr [ rbp - num ] movq rax , xmm3 movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movss xmm1 , dword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] addss xmm0 , xmm1 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rip + hexvar ] comiss xmm0 , dword ptr [ rbp - num ] jae hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add qword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar add qword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 call hexvar cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jg hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edi , hexvar call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar je hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rip + hexvar ] movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax + rcx ] , dl nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , num lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , num lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jg hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + hexvar ] mov rdx , rax mov esi , hexvar mov rdi , rcx call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , num call hexvar mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar mov eax , hexvar sub eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movsd xmm0 , qword ptr [ rax ] movsd xmm1 , qword ptr [ rbp - num ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar pxor xmm1 , xmm1 cvtsi2sd xmm1 , dword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - num ] divsd xmm0 , xmm1 movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movsd xmm1 , qword ptr [ rax ] movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmm1 jbe hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov esi , num mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov esi , num mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] jmp hexvar add dword ptr [ rbp - hexvar ] , num lea rax , [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al nop add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar jmp hexvar add qword ptr [ rbp - num ] , num call hexvar cdqe mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jge hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num je hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov esi , eax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] and eax , num test al , al jne hexvar mov dword ptr [ rbp - hexvar ] , num nop cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + num ] and edx , hexvar mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rip + hexvar ] , eax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + num ] and edx , hexvar mov byte ptr [ rax + num ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num call hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , num lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - num ] sub eax , num sub eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - num ] add eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] add dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx edx , byte ptr [ rdx ] movsx edx , dl sub eax , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num call hexvar mov edx , dword ptr [ rbp - hexvar ] sub edx , dword ptr [ rbp - hexvar ] lea ecx , [ rdx + num ] cdq idiv ecx mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar sub dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jge hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num sub eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] lea edx , [ rax - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jle hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] add eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - num ] mov eax , edx test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar test al , al je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num jmp hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rdx , qword ptr [ rip + hexvar ] movsx eax , byte ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , num mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov rdx , qword ptr [ rip + hexvar ] movsx eax , byte ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movzx eax , byte ptr [ rbp - num ] and eax , hexvar mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] and eax , hexvar mov byte ptr [ rbp - num ] , al mov byte ptr [ rbp - num ] , num jmp hexvar movsx rdx , byte ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] movsx rcx , byte ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar movzx eax , byte ptr [ rbp - num ] and eax , hexvar add eax , num and eax , hexvar and eax , hexvar mov edx , eax movzx eax , byte ptr [ rbp - num ] and eax , hexvar or eax , edx mov byte ptr [ rbp - num ] , al jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar movsx rdx , byte ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] movsx rcx , byte ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar movzx eax , byte ptr [ rbp - num ] shr al , num add eax , num and eax , hexvar shl eax , num mov edx , eax movzx eax , byte ptr [ rbp - num ] and eax , hexvar or eax , edx mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] add eax , num mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jle hexvar mov byte ptr [ rbp - num ] , num movzx eax , byte ptr [ rbp - num ] add eax , num mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - num ] , num jne hexvar cmp dword ptr [ rbp - num ] , num jle hexvar sub dword ptr [ rbp - num ] , num sub qword ptr [ rbp - hexvar ] , num movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov edi , hexvar call hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar cmp byte ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jg hexvar movsx eax , byte ptr [ rbp - hexvar ] and eax , num test eax , eax jne hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar jmp hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl add dword ptr [ rbp - num ] , num call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num sub rax , rdx lea rdx , [ rax + hexvar ] lea rax , [ rip + hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax lea rdx , [ rax + hexvar ] lea rax , [ rip + hexvar ] add rax , rdx add rax , num mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax movsx eax , byte ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] lea edi , [ rax - num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea esi , [ rax + num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] lea ecx , [ rdx + num ] cdq idiv ecx mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - num ] lea edi , [ rax - num ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , edx mov edx , edi mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea esi , [ rax + num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al add dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num je hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num call hexvar mov byte ptr [ rbp - hexvar ] , al movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax mov ecx , edx sub ecx , eax lea eax , [ rcx + num ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - hexvar ] mov eax , edx add eax , eax add eax , edx shl eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edi , num call hexvar mov edi , eax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax mov ecx , edx sub ecx , eax lea eax , [ rcx + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax lea eax , [ rdx + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num mov ecx , eax sar ecx , hexvar sub edx , ecx imul ecx , edx , hexvar sub eax , ecx mov edx , eax lea eax , [ rdx + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx add qword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx add eax , num mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num nop add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax movsd qword ptr [ rbp - num ] , xmm0 add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar call hexvar mov edx , num div dword ptr [ rbp - num ] mov eax , edx add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] imul eax , eax , hexvar mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 pxor xmm0 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , qword ptr [ rbp - hexvar ] divsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax call hexvar movq rax , xmm0 movq xmm0 , rax mulsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jae hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq rax , xmm0 movq xmm0 , rax leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 pxor xmm0 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , qword ptr [ rbp - hexvar ] divsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movq xmm0 , rax call hexvar movq rax , xmm0 movq xmm0 , rax mulsd xmm0 , qword ptr [ rbp - num ] movsd xmm1 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jae hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movq rax , xmm0 movq xmm0 , rax leave ret
endbr64 push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 pxor xmm0 , xmm0 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movapd xmm1 , xmm0 mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar call hexvar mov edx , num div dword ptr [ rbp - num ] mov eax , edx add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] imul eax , eax , hexvar mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar call hexvar mov edx , num div dword ptr [ rbp - num ] mov eax , edx add dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] imul eax , eax , hexvar mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov esi , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov ecx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] add ecx , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , ecx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rcx , rax lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] add ecx , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , ecx lea rcx , [ rdx * num ] lea rdx , [ rip + hexvar ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rcx , rax lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rdx ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rcx , rax lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov dword ptr [ rcx + rdx ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
