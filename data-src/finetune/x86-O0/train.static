endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov word ptr [ rax ] , hexvar mov byte ptr [ rax + num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , num mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , hexvar mov edi , eax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe shl rax , num mov rsi , rax lea rcx , [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rsi + rcx ] , rax mov qword ptr [ rsi + rcx + num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx mov edx , eax neg edx cmovns eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jg hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov ecx , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , hexvar mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , cl mov eax , dword ptr [ rbp - hexvar ] cdq idiv dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jg hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
eax , ax and eax , hexvar test eax , eax je hexvar call hexvar mov rdx , qword ptr [ rax ] movsx rax , byte ptr [ rbp - num ] add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar call hexvar mov rdx , qword ptr [ rax ] movsx rax , byte ptr [ rbp - hexvar ] add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar call hexvar mov rdx , qword ptr [ rax ] movsx rax , byte ptr [ rbp - num ] add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - num ] jge hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al movzx eax , byte ptr [ rbp - hexvar ] add eax , num mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - num ] jle hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al movzx eax , byte ptr [ rbp - hexvar ] sub eax , num mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - num ] jge hexvar add dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al nop add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] ,
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al nop add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov esi , num mov edi , num call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , num mov esi , num mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov edi , num call hexvar mov edi , num call hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rcx ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movabs rax , hexvar mov rdx , rax movabs rax , hexvar mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] shr eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] shr eax , num not eax mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 movq xmm0 , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar fld xword ptr [ rip + hexvar ] lea rsp , [ rsp - hexvar ] fstp xword ptr
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al je hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
, qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num pxor xmm0 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , eax addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm1 , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov eax , edx neg eax cmovs eax , edx lea ecx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , hexvar jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] leave ret
] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jg hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov rcx , rax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov esi , hexvar lea
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al sub dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rip + hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] sub rax , rdx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] cmp al , byte ptr [ rbp - num ] jne hexvar cmp byte ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - num ] cmp al , byte ptr [ rbp - num ] je hexvar movsx eax , byte ptr [ rbp - num ] movsx edx , byte ptr [ rbp - num ] sub eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] sub edx , num mov rcx , rax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
+ hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cdqe add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cdqe add qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] comisd xmm0 , xmmword ptr [ rbp - hexvar ] jbe hexvar mov eax , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] comisd xmm0 , xmmword ptr [ rbp - num ] jbe hexvar mov eax , num jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar sub qword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num add dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , hexvar je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , hexvar je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rcx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rcx ] cmp dl , al jge hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rax + rdx ] movsx eax , al mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add eax , num cdqe lea rdx , [ rip + hexvar ] movzx edx , byte ptr [ rax + rdx ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rip + hexvar ] mov byte ptr [ rax + rcx ] , dl mov eax , dword ptr [ rbp - num ] add eax , num mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jge hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov edx , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx lea edx , [ rax * num ] add eax , edx sub ecx , eax mov edx , ecx sub edx , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx lea edx , [ rax * num ] add eax , edx sub ecx , eax mov edx , ecx test edx , edx jne hexvar mov edx , hexvar jmp hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx lea edx , [ rax * num ] add eax , edx sub ecx , eax mov edx , ecx jmp hexvar mov edx , num mov eax , edx leave ret
mov qword ptr [ rbp - num ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rdx mov rsi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rdx mov rsi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rdx mov rsi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rdx mov rsi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ]
mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx mov rsi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - hexvar ] , num
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov eax , num leave ret
eax cmp dword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jge hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rcx mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar lea rax , [ rip + hexvar ] mov rcx , rax mov edx , hexvar
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] je hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov edi , hexvar call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov ecx , dword ptr [ rbp - num ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax sub ecx , eax mov edx , ecx mov esi
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] imul edx , eax mov eax , edx shl eax , num add eax , edx add eax , eax mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + num ] movsxd rcx , edx cqo idiv rcx mov rax , rdx mov dword ptr [ rbp - num ] , eax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rdx + hexvar ] movsxd rcx , edx cqo idiv rcx mov rax , rdx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar lea rax , [ rip + hexvar ] mov rcx , rax mov edx , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] cmp eax , - num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov dword ptr [ rax ] , hexvar nop leave ret
, rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea edx , [ rcx - num ] mov dword ptr [ rax + hexvar ] , edx jmp hexvar
, [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax jmp hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jg hexvar jmp hexvar sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax nop cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edx , eax mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] add edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jle hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov eax , num sub rax , rdx add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] neg rax mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx jmp hexvar mov eax , num pop rbp ret
, qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
[ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne
rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ]
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx sub eax , num add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov qword ptr [ rdx + rax ] , rcx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rdx leave ret
hexvar ] cdqe imul rax , rax , hexvar lea rdx , [ rip + hexvar ] mov ecx , dword ptr [ rax + rdx ] mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] add ecx , edx cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , ecx mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] lea rsi , [ rax + rdx ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rsi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rax , hexvar lea rcx , [ rax + hexvar ] lea rax , [ rip + hexvar ] add rax , rcx add rax , num mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx lea rdx , [ rax * num ] add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe imul rax , rax , hexvar lea rcx , [ rip + hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword
[ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rdx ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , num mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] add rax , num mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] add rax , num mov rsi , rdx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp
rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rip + hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp ecx , eax jge hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx edx , byte ptr [ rbp - num ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [
rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp
, dword ptr [ rbp - num ] neg eax mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar nop jmp hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al lea edx , [ rax - hexvar ] mov eax , dword ptr [ rbp - num ] cmp edx , eax jle hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al lea edx , [ rax - hexvar ] mov eax , ecx sub eax , edx mov dword ptr [ rbp - hexvar ] , eax add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar neg dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al setne al movzx edx , al mov rax ,
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar pxor xmm1 , xmm1 cvtss2sd xmm1 , dword ptr [ rbp - hexvar ] movq rax , xmm1 movq xmm0 , rax mov eax , num call hexvar pxor xmm2 , xmm2 cvtss2sd xmm2 , dword ptr [ rbp - hexvar ] movq rax , xmm2 movq xmm0 , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] movq xmm0 , rax mov eax , num call hexvar mov eax , num leave ret
rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr
ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , num shl rax , num lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rdx , rax mov rax , qword ptr [ rcx ] mov qword ptr [ rdx ] , rax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe add rax , num shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rcx , rax mov rax , qword ptr [ rdx ] mov rdx , qword ptr [ rdx + num ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx nop pop
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jns hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx cdqe lea rcx , [ rax * num ] lea rdx , [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rcx + rdx ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax je hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rdx add rax , rax add rax , rcx mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov esi , ecx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx lea rdx , [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx test eax , eax je hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] sub eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx add edx , edx add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al call hexvar mov rdx , qword ptr [ rax ] movzx eax , byte ptr [ rbp - num ] add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar mov eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar movzx eax , byte ptr [ rbp - num ] mov edx , eax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar movzx edx , byte ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov ecx , eax sar edx , cl mov eax , edx and eax , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar mov edi , hexvar call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rip + hexvar ] cdqe lea rcx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rcx + rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] sub eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar mov ecx , eax sar ecx , hexvar sub edx , ecx mov dword ptr [ rbp - num ] , edx mov ecx , dword ptr [ rbp - num ] mov edx , ecx add edx , edx add edx , ecx sub eax , edx mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jg hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jle hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov ecx , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov edx , dword ptr [ rdx ] add edx , hexvar cmp eax , edx jne hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp rax , num je hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov eax , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov ecx , dword ptr [ rip + hexvar ] cdq idiv ecx mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
[ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] ,
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx sub eax , num add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rdx , edx lea rcx , [ rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jg hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - hexvar ] , eax jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov esi , dword ptr [ rdx + rax * num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov ecx , dword ptr [ rdx + rax * num ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax add ecx , esi mov eax , dword ptr [ rbp - num ] cdqe mov dword ptr [ rdx + rax * num ] , ecx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar nop nop pop rbp ret
