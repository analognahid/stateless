endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al nop add dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - num ] , num je hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx edx , byte ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov edx , dword ptr [ rbp - num ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx imul ecx , eax , hexvar mov eax , edx sub eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jle hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al sub dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] sub eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov edx , dword ptr [ rbp - num ] mov ecx , edx cdqe lea rdx , [ rip + hexvar ] mov byte ptr [ rax + rdx ] , cl nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar add dword ptr [ rbp - num ] , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar mov ecx , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jge hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] movq xmm0 , rax mov edi , hexvar call hexvar add rsp , hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jge hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar jle hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jle hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] add eax , edx pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rax * num ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , num mov dword ptr [ rax ] , num nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] mov dword ptr [ rbp - num ] , edx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] add rax , hexvar mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rax + num ] mov dword ptr [ rbp - num ] , ecx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov ecx , dword ptr [ rbp - num ] mov rdx , rax mov esi , ecx lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rax ] , xmm0 nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx sub eax , num add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax + num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rcx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num add rax , rsi mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , num mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp eax , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rbp - num ] mov edi , num movq xmm0 , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe mov esi , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , hexvar mov dword ptr [ rbp - num ] , num lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jbe hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] cmp dword ptr [ rbp - num ] , eax jbe hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax add ecx , ecx add ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rip + hexvar ] , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , num jg hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr [ rbp - hexvar ] pxor xmm1 , xmm1 cvtsi2sd xmm1 , rax movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm1 movsd xmm2 , qword ptr [ rip + hexvar ] movapd xmm1 , xmm0 divsd xmm1 , xmm2 mov rax , qword ptr [ rbp - hexvar ] test rax , rax js hexvar pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax jmp hexvar mov rdx , rax shr rdx , num and eax , num or rdx , rax pxor xmm0 , xmm0 cvtsi2sd xmm0 , rdx addsd xmm0 , xmm0 comisd xmm0 , xmm1 ja hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edi , eax mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax mov ecx , edx sub ecx , eax lea eax , [ rdi + rcx ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe mov eax , dword ptr [ rdx + rax * num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov edi , hexvar call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov edx , ecx mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax nop mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov edi , eax call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jns hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rsi , rdx mov rdi , rax call hexvar sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jg hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] sub eax , num cmp dword ptr [ rbp - num ] , eax jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rsi , eax mov rax , rsi shl rax , num add rax , rsi shl rax , num mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rsi mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jl hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp edx , eax jle hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - hexvar ] mov edx , eax mov eax , dword ptr [ rbp - num ] add eax , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + rax * num ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx ecx , al mov eax , edx sub eax , ecx jmp hexvar add qword ptr [ rbp - num ] , num add qword ptr [ rbp - hexvar ] , num sub qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , hexvar pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax nop pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp dl , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num pop rbp ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar sub qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rdx ] mov byte ptr [ rax ] , dl movzx eax , byte ptr [ rax ] test al , al je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov esi , dword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov ecx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov r8d , esi mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov dword ptr [ rip + hexvar ] , hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , num mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , num jmp hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar nop nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar nop pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movsx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar and byte ptr [ rbp - num ] , hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar movzx eax , byte ptr [ rip + hexvar ] movsx eax , al mov edi , eax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , num mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al lea rax , [ rbp - num ] mov edx , num mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar jne hexvar mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rax ] , num add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov dword ptr [ rbp - hexvar ] , edx cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx mov edx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov edi , eax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov edx , num mov esi , eax mov edi , hexvar mov eax , num call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax mov eax , num call hexvar nop leave ret
