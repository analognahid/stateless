dword ptr [ rbp - num ] and eax , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax ] , hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jle hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rax + rcx ] lea rax , [ rip + hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edx , dword ptr [ rbp - hexvar ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al add dword ptr [ rbp - hexvar ] , eax sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
] , edi mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar jg hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] movsx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov edx , dword ptr [ rbp - num ] sub edx , num mov rcx , rax mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov esi , hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] jl hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num nop pop rbp ret
, dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx add eax , eax add eax , ecx shl eax , num sub edx , eax mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] movq xmm0 , rcx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rsp , num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] movq xmm0 , rax call hexvar add rsp , hexvar movq rax , xmm0 mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 add dword ptr [ rbp - hexvar ] , num mov ecx , dword ptr [ rbp - hexvar ] movsxd rax , ecx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , ecx sar esi , hexvar sub eax , esi mov edx , eax mov eax , edx add eax , eax add eax , edx shl eax , num sub ecx , eax mov edx , ecx test edx , edx jne hexvar add dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] movq xmm0 , rcx mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jl hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub edx , num mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub edx , hexvar mov dword ptr [ rax ] , edx mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov edi , hexvar call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] neg eax mov edi , eax call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov ecx , eax mov eax , edx sub eax , ecx mov dword ptr [ rbp - num ] , eax mov edx , dword ptr [ rbp - hexvar ] movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov esi , edx sar esi , hexvar sub eax , esi mov ecx , eax mov eax , ecx shl eax , num add eax , ecx add eax , eax sub edx , eax mov dword ptr [ rbp - num ] , edx mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar cmp dword ptr [ rbp - num ] , num je hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num je hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jle hexvar jmp hexvar nop jmp hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov eax , dword ptr [ rax ] test eax , eax js hexvar mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - num ] , eax jl hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop leave ret
hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rax , qword ptr [ rax ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov dword ptr [ rax ] , hexvar mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea
ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov ecx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - hexvar ] add edx , ecx mov dword ptr [ rax + hexvar ] , edx jmp hexvar add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num add rax
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax jg hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] mov esi , edx mov edi , eax call hexvar mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rdx + num ] , eax nop leave ret
rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num
[ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov eax , ecx add eax , eax add eax , ecx shl eax , num sub edx , eax mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax ,
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov edi , num call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov edi , num call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx cmp qword ptr [ rbp - num ] , num jne hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] cmp eax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] lea edx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , eax cdqe add rax , num lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] add eax , eax cdqe add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , eax lea edx , [ rax + num ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , eax add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num lea edx , [ rax + rax ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num add eax , eax mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] add eax , eax cdqe add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num lea edx , [ rax + rax ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num add eax , eax mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] sub eax , num mov edx , eax shr edx , hexvar add
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov eax , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov edx , eax mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov edx , eax shr edx , hexvar add eax , edx sar eax , num cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rcx mov rax , qword ptr [ rax ] mov eax , dword ptr [ rax ] cmp edx , eax jg hexvar mov eax , dword ptr [ rip + hexvar ] add eax , num mov dword ptr [ rip + hexvar ] , eax nop leave ret
, rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov eax , ecx add eax , eax add eax , ecx shl eax , num sub edx , eax mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ]
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov eax , dword ptr [ rbp - num ] cdq idiv dword ptr [ rbp - hexvar ] mov eax , edx test eax , eax je hexvar add dword ptr [ rbp - hexvar ] , num jmp hexvar mov dword ptr [ rbp - hexvar ] , num add dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar cmp dword ptr [ rbp - num ] , hexvar jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx sub eax , num add dword ptr [ rbp - num ] , eax add dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - num ] , hexvar nop jmp hexvar mov edx , dword ptr [ rbp - num ] mov eax , edx shl eax , num add eax , edx add eax , eax mov edx , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar add eax , edx mov dword ptr [ rbp - num ] , eax add qword ptr [ rbp - hexvar ] , num call hexvar mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx rax , al add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ rbp - num ] imul eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al setne al movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - num ] leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , hexvar je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num cdq idiv dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar add dword ptr [ rbp - hexvar ] , num sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rsi , rdx mov edi , eax call hexvar add dword ptr [ rbp - hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , - num jne hexvar nop nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov edx , eax shr edx , hexvar add eax , edx sar eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num add rax , rdx mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num leave ret
endbr64 push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar sub dword ptr [ rbp - num ] , num add dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] lea edx , [ rax + num ] test eax , eax cmovs eax , edx sar eax , num mov edx , eax mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar sub eax , edx add ecx , eax mov eax , dword ptr [ rbp - num ] movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi add ecx , eax mov edx , dword ptr [ rbp - num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , edx add eax , num movsxd rdx , eax imul rdx , rdx , hexvar shr rdx , hexvar sar edx , num sar eax , hexvar mov esi , eax mov eax , edx sub eax , esi lea edx , [ rcx + rax ] mov eax , dword ptr [ rbp - hexvar ] add edx , eax movsxd rax , edx imul rax , rax , - hexvar shr rax , hexvar add eax , edx sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov ecx , eax shl ecx , num sub ecx , eax mov eax , edx sub eax , ecx pop rbp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] sub eax , num cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cdqe lea rdx , [ rip + hexvar ] add rax , rdx notrack jmp rax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar call hexvar mov rdx , qword ptr [ rax ] mov eax , dword ptr [ rbp - num ] cdqe add rax , rax add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov eax , hexvar mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , hexvar jle hexvar mov eax , num leave ret
mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov edx , eax movsxd rax , edx imul rax , rax , hexvar shr rax , hexvar sar eax , num mov ecx , edx sar ecx , hexvar sub eax , ecx mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] mov eax , ecx add eax , eax add eax , ecx shl eax , num sub edx , eax mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - num ] , eax je hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar jmp hexvar nop mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar call hexvar cdq shr edx , hexvar add eax , edx and eax , num sub eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax
hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar sub dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jg hexvar
