endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rdx + rax ] mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rcx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rcx + rax ] mov esi , eax lea rax , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - num ] , eax jl hexvar jmp hexvar mov edi , hexvar call hexvar nop leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rax , qword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rax , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] cmp al , hexvar jne hexvar add dword ptr [ rbp - hexvar ] , num lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar cmp eax , - num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rcx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] sub rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar sub eax , num mov dword ptr [ rbp - num ] , eax jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , dword ptr [ rbp - num ] movsxd rcx , edx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx movzx eax , byte ptr [ rax ] mov byte ptr [ rdx ] , al mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al add dword ptr [ rbp - num ] , num sub dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar nop nop leave ret
